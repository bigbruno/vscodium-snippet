{
  "Confere se o arquivo existe": {
    "prefix": "if -f",
    "body": "#Confere se o arquivo existe\nif [ -f \"/bin/bash\" ]; then\n    echo \"O arquivo existe\"\nelse\n    echo \"O arquivo não existe\"\nfi",
    "description": "Confere se o arquivo existe"
  },
  "Confere se o arquivo, diretório, link, ou arquivo especial existe": {
    "prefix": "if -e",
    "body": "#Confere se o arquivo, diretório, link, ou arquivo especial existe\nif [ -e \"/bin/bash\" ]; then\n    echo \"O arquivo ou diretório não existe\"\nelse\n    echo \"O arquivo ou diretório existe\"\nfi",
    "description": "Confere se o arquivo, diretório, link, ou arquivo especial existe"
  },
  "Confere se a desigualdade é verdadeira": {
    "prefix": "if !=",
    "body": "#Confere se a desigualdade é verdadeira\nif [ \"0\" != \"1\" ]; then\n    echo \"A desigualdade é verdadeira\"\nelse\n    echo \"A desigualdade não é verdadeira\"\nfi",
    "description": "Confere se a desigualdade é verdadeira"
  },
  "Como utilizar checagens multiplas com elif": {
    "prefix": "if elif",
    "body": "#############\n#O uso do elif permite inserir uma série de checagens, iguais as utilizadas no if\n#As chacagens são interrompidas após a primeira checagem ser considerada ok\n#############\nif [ \"1\" = \"0\" ]\nthen\n    echo \"Primeira checagem ok\"\n\nelif [ \"1\" = \"1\" ]\nthen\n    echo \"Segunda checagem ok\"\n\nelif [ \"1\" = \"2\" ]\nthen\n    echo \"Terceira checagem ok\"\n\nelse\n    echo \"Nenhuma checagem foi suprida.\"\nfi",
    "description": "Como utilizar checagens multiplas com elif"
  },
  "Como utilizar checagens multiplas AND e OR": {
    "prefix": "if || e &&",
    "body": "#############\n#As checagens podem ser combinadas por OR, que é representado por ||, nesses casos, será considerado ok se respeitar uma checagem ou outra.\n#As checagens podem ser combinadas por AND, que é representado por &&, nesses casos, será considerado ok se respeitar TODAS as checagens.\n#############\n#Exemplo de checagens multiplas, aonde todas precisam ser respeitadas\nif [ \"1\" = \"1\" ] && [ \"2\" = \"2\" ];then\n    echo \"Checagens OK.\"\nelse\n    echo \"Checagens não correspondem.\"\nfi\n\n#Exemplo de checagens multiplas, aonde apenas uma precisa ser respeitada\nif [ \"1\" = \"1\" ] || [ \"1\" = \"2\" ];then\n    echo \"Checagens OK.\"\nelse\n    echo \"Checagens não correspondem.\"\nfi\n\n#Exemplo de checagens múltiplas mistas.\nif [ \"1\" = \"0\" ] || [ \"1\" = \"1\" ] && [ -e \"/boot\" ] || [ -w \"/etc\" ]\nthen\n    echo \"Checagens OK.\"\nelse\n    echo \"Checagens não correspondem.\"\nfi",
    "description": "Como utilizar checagens multiplas AND e OR"
  },
  "Confere se o arquivo não existe": {
    "prefix": "if ! -f",
    "body": "#Confere se o arquivo não existe\nif [ ! -f \"/bin/bash\" ]; then\n    echo \"O arquivo não existe\"\nelse\n    echo \"O arquivo existe\"\nfi",
    "description": "Confere se o arquivo não existe"
  },
  "Confere se o arquivo, diretório, link, ou arquivo especial NÃO existe": {
    "prefix": "if ! -e",
    "body": "#Confere se o arquivo, diretório, link, ou arquivo especial NÃO existe\nif [ ! -e \"/bin/bash\" ]; then\n    echo \"O arquivo ou diretório não existe\"\nelse\n    echo \"O arquivo ou diretório existe\"\nfi",
    "description": "Confere se o arquivo, diretório, link, ou arquivo especial NÃO existe"
  },
  "Confere se a variável NÃO é nula": {
    "prefix": "if -z)",
    "body": "#Confere se a variável NÃO é nula\nif [ \"$variavelX\" ]\nthen\n    echo \"A variável existe.\"\nelse\n    echo \"A variável NÃO existe\"\nfi",
    "description": "Confere se a variável NÃO é nula"
  },
  "Confere se a variável é nula": {
    "prefix": "if -z)",
    "body": "#Confere se a variável é nula\nif [ -z \"$variavelX\" ]\nthen\n    echo \"A variável está vazia.\"\nelse\n    echo \"A variável NÃO está vazia.\"\nfi",
    "description": "Confere se a variável é nula"
  },
  "Confere se o arquivo ou diretório NÃO possui permissão de leitura": {
    "prefix": "if ! -r)",
    "body": "#Confere se o arquivo ou diretório NÃO possui permissão de leitura\nif [ ! -r \"/etc\" ]\nthen\n    echo \"O arquivo ou diretório NÃO possui permissão de leitura para o usuário $USER.\"\nelse\n    echo \"O arquivo ou diretório possui permissão de leitura para o usuário $USER.\"\nfi",
    "description": "Confere se o arquivo ou diretório NÃO possui permissão de leitura"
  },
  "Confere se o arquivo NÃO possui permissão de execução": {
    "prefix": "if ! -x)",
    "body": "#Confere se o arquivo NÃO possui permissão de execução\nif [ ! -x \"/bin/bash\" ]\nthen\n    echo \"O arquivo NÃO possui permissão de execução.\"\nelse\n    echo \"O arquivo possui permissão de execução.\"\nfi",
    "description": "Confere se o arquivo NÃO possui permissão de execução"
  },
  "Confere se o arquivo ou diretório NÃO possui permissão de escrita": {
    "prefix": "if ! -w)",
    "body": "#Confere se o arquivo ou diretório NÃO possui permissão de escrita\nif [ ! -w \"/etc\" ]\nthen\n    echo \"O arquivo ou diretório NÃO possui permissão de gravação para o usuário $USER.\"\nelse\n    echo \"O arquivo ou diretório possui permissão de gravação para o usuário $USER.\"\nfi",
    "description": "Confere se o arquivo ou diretório NÃO possui permissão de escrita"
  },
  "Confere se o arquivo ou diretório pertence a um grupo que o usuário que está executando o script": {
    "prefix": "if -G ",
    "body": "#Confere se o arquivo ou diretório pertence a um grupo que o usuário que está executando o script\nif [ -G \"$HOME\" ]\nthen\n    echo \"O arquivo ou diretório pertence a um grupo que o usuário $USER também pertence.\"\nelse\n    echo \"O arquivo ou diretório NÃO pertence a um grupo que o usuário $USER também pertence.\"\nfi",
    "description": "Confere se o arquivo ou diretório pertence a um grupo que o usuário que está executando o script"
  },
  "Confere se o usuário tem permissões de root (administrador)": {
    "prefix": "if test $(id -u)",
    "body": "#Confere se o usuário tem permissões de root (administrador)\nif test $(id -u) != 0\nthen\n    echo \"Usuário sem permissão de root, cancelando o processo.\"\n    exit\nfi",
    "description": "Confere se o usuário tem permissões de root (administrador)"
  },
  "Confere se o arquivo ou diretório possui permissão de leitura": {
    "prefix": "if -r",
    "body": "#Confere se o arquivo ou diretório possui permissão de leitura\nif [ -r \"/etc\" ]\nthen\n    echo \"O arquivo ou diretório possui permissão de leitura para o usuário $USER.\"\nelse\n    echo \"O arquivo ou diretório NÃO possui permissão de leitura para o usuário $USER.\"\nfi",
    "description": "Confere se o arquivo ou diretório possui permissão de leitura"
  },
  "Confere se o arquivo possui permissão de execução": {
    "prefix": "if -x",
    "body": "#Confere se o arquivo possui permissão de execução\nif [ -x \"/bin/bash\" ]\nthen\n    echo \"O arquivo possui permissão de execução.\"\nelse\n    echo \"O arquivo NÃO possui permissão de execução.\"\nfi",
    "description": "Confere se o arquivo possui permissão de execução"
  },
  "Confere se o arquivo ou diretório possui permissão de escrita": {
    "prefix": "if -w",
    "body": "#Confere se o arquivo ou diretório possui permissão de escrita\nif [ -w \"/etc\" ]\nthen\n    echo \"O arquivo ou diretório possui permissão de gravação para o usuário $USER.\"\nelse\n    echo \"O arquivo ou diretório NÃO possui permissão de gravação para o usuário $USER.\"\nfi",
    "description": "Confere se o arquivo ou diretório possui permissão de escrita"
  },
  "Arquivo ou diretório pertence ao usuário que está executando o script": {
    "prefix": "if ! -O",
    "body": "#Arquivo ou diretório pertence ao usuário que está executando o script\nif [ ! -O \"$HOME\" ]\nthen\n    echo \"O arquivo ou diretório pertence ao usuário $USER.\"\nelse\n    echo \"O arquivo ou diretório NÃO pertence ao usuário $USER.\"\nfi",
    "description": "Arquivo ou diretório pertence ao usuário que está executando o script"
  },
  "Confere se o arquivo ou diretório NÃO pertence a um grupo que o usuário que está executando o script está incluso": {
    "prefix": "if ! -G",
    "body": "#Confere se o arquivo ou diretório NÃO pertence a um grupo que o usuário que está executando o script está incluso\nif [ ! -G \"$HOME\" ]\nthen\n    echo \"O arquivo ou diretório NÃO pertence a um grupo que o usuário $USER também pertence.\"\nelse\n    echo \"O arquivo ou diretório pertence a um grupo que o usuário $USER também pertence.\"\nfi",
    "description": "Confere se o arquivo ou diretório NÃO pertence a um grupo que o usuário que está executando o script está incluso"
  },
  "Confere se um número é menor que o outro": {
    "prefix": "if -lt",
    "body": "#Confere se um número é menor que o outro\nif [ \"1\" -lt \"2\" ]; then\n    echo \"É menor que\"\nelse\n    echo \"Não é menor que\"\nfi",
    "description": "Confere se um número é menor que o outro"
  },
  "Confere se um número é menor ou igual ao outro": {
    "prefix": "if -le",
    "body": "#Confere se um número é menor ou igual ao outro\nif [ \"1\" -le \"2\" ]; then\n    echo \"É menor ou igual\"\nelse\n    echo \"Não é menor ou igual\"\nfi",
    "description": "Confere se um número é menor ou igual ao outro"
  },
  "Arquivo ou diretório é mais recente": {
    "prefix": "if -nt",
    "body": "#Arquivo ou diretório é mais recente\nif [ \"arquivo2\" -nt \"arquivo1\" ]\nthen\n    echo \"O arquivo é mais recente.\"\nelse\n    echo \"O arquivo NÃO é mais recente.\"\nfi",
    "description": "Arquivo ou diretório é mais recente"
  },
  "Arquivo ou diretório é mais antigo": {
    "prefix": "if -ot",
    "body": "#Arquivo ou diretório é mais antigo\nif [ \"arquivo1\" -ot \"arquivo2\" ]\nthen\n    echo \"O arquivo é mais antigo.\"\nelse\n    echo \"O arquivo NÃO é mais antigo.\"\nfi",
    "description": "Arquivo ou diretório é mais antigo"
  },
  "Confere se um número é maior que o outro": {
    "prefix": "if -gt",
    "body": "#Confere se um número é maior que o outro\nif [ \"2\" -gt \"1\" ]; then\n    echo \"É maior que\"\nelse\n    echo \"Não é maior que\"\nfi",
    "description": "Confere se um número é maior que o outro"
  },
  "Confere se um número é maior ou igual ao outro": {
    "prefix": "if -ge",
    "body": "#Confere se um número é maior ou igual ao outro\nif [ \"1\" -ge \"2\" ]; then\n    echo \"É maior ou igual\"\nelse\n    echo \"Não é maior ou igual\"\nfi",
    "description": "Confere se um número é maior ou igual ao outro"
  },
  "Confere se a igualdade é verdadeira": {
    "prefix": "if ! -d",
    "body": "#Confere se a igualdade é verdadeira\nif [ \"1\" = \"1\" ]; then\n    echo \"A igualdade é verdadeira\"\nelse\n    echo \"A igualdade não é verdadeira\"\nfi",
    "description": "Confere se a igualdade é verdadeira"
  },
  "Confere se o diretório NÃO existe": {
    "prefix": "if ! -d",
    "body": "#Confere se o diretório NÃO existe\nif [ ! -d \"/boot\" ]\nthen\n    echo \"O diretório existe\"\nelse\n    echo \"O diretório NÃO existe\"\nfi",
    "description": "Confere se o diretório NÃO existe"
  },
  "Confere se o diretório existe": {
    "prefix": "if -d",
    "body": "#Confere se o diretório existe\nif [ -d \"/boot\" ]\nthen\n    echo \"O diretório existe\"\nelse\n    echo \"O diretório NÃO existe\"\nfi",
    "description": "Confere se o diretório existe"
  },
  "Loop infinito": {
    "prefix": "while2",
    "body": "#loop infinito usando while\nwhile :; do\n\techo \"Isso será executado infinitamente até que seja pressionado [CTRL+C].\"\ndone",
    "description": "Loop infinito"
  },
  "Loop até 5": {
    "prefix": "while",
    "body": "#loop até 5 usando while\nCONTADOR=0\nwhile [  $CONTADOR -lt 5 ]; do\n      echo \"$CONTADOR\";\n      let CONTADOR=CONTADOR+1;\ndone",
    "description": "Loop até 5"
  },
  "until, o while invertido": {
    "prefix": "until",
    "body": "#O loop com until é o oposto do loop com while, irá repetir o loop enquanto a condição não for verdadeira, veja o exemplo que verifica se o navegador Firefox está aberto.\nuntil ps -e | grep firefox > /dev/null\ndo\n      echo \"O navegador Firefox NÃO está em execução.\"\n      sleep 10\ndone",
    "description": "until, o while invertido"
  },
  "Aguardar segundos": {
    "prefix": "sleep",
    "body": "#Para por 5 segundos e depois prossegue normalmente.\nsleep 5",
    "description": "Aguardar segundos"
  },
  "Criar pastas": {
    "prefix": "mkdir",
    "body": "#Cria pastas e subpastas, exemplo de uso: mkdir -p /home/usuario/pasta\nmkdir -p",
    "description": "Criar pastas"
  },
  "loop de lista": {
    "prefix": "for2",
    "body": "#Exemplo de for, onde irá executar o trecho entre do e done substituindo cada vez a variável $i por variavel 1, bananas e uvas.\nfor i  in  \"variavel 1\" \"bananas\" \"uvas\"; do\n    echo \"$i\"\ndone",
    "description": "loop de lista"
  },
  "loop de comando": {
    "prefix": "for",
    "body": "#Exemplo de for, onde irá executar o trecho entre do e done uma vez para cada palavra listada no comando ls ~\nfor i  in  $(ls ~); do\n    echo \"$i\"\ndone",
    "description": "loop de comando"
  },
  "echo, exibir na tela": {
    "prefix": "echo",
    "body": "#Insira o conteúdo entre os 2 EOF sem se preocupar com aspas\necho $\"\"",
    "description": "echo, exibir na tela"
  },
  "case, uma opção ao if": {
    "prefix": "case",
    "body": "#Confere o primeiro parametro informado com as opções a seguir, exemplo de uso: ./script start\ncase \"$1\" in\n\n    start)\n\techo \"iniciando\"\n\texit\n    ;;\n\n    stop)\n\techo \"parando\"\n\texit\n    ;;\n\n    restart)\n\techo \"reiniciando\"\n\texit\n    ;;\n\nesac",
    "description": "case, uma opção ao if"
  },
  "IFS, altera a detecção de qubra de linhas": {
    "prefix": "IFS",
    "body": "#Altera a variável IFS para quebra de linha.\n#IFS é uma variável usada por vários comandos, entre eles o for, como forma de delimitador, onde normalmente é utilizado quebra de linha ou espaço em branco, nesse exemplo será considerado apenas a quebra de linha.\nOIFS=$IFS\nIFS=$'\n'\n#Insira aqui os comandos a serem executados com IFS somente para quebra de linha.\n\n\n#Restaura variável IFS para o padrão do sistema.\nIFS=$OIFS",
    "description": "IFS, altera a detecção de qubra de linhas"
  },
  "Cria uma função": {
    "prefix": "funcao",
    "body": "#A função é como criar um script dentro do script, que podemos executa-lo chamando o nome da função, segue exemplo:\n#Criando a função\n\nfuncao1 () {\n  echo \"Essa função apenas exibe esse texto. E esse complemento: $1\"\n}\n\n#Executando a função, e incluindo uma variável dentro da função\nfuncao1 \"Complemento adicionado à função.\"\n",
    "description": "Cria uma função"
  },
  "EOF, equivale ao echo, mas não é preciso preocupar com aspas": {
    "prefix": "EOF",
    "body": "#Insira o conteúdo entre os 2 EOF sem se preocupar com aspas\ncat << EOF\n\n\nEOF",
    "description": "EOF, equivale ao echo, mas não é preciso preocupar com aspas"
  },
  "Insere uma linha antes da linha que possui uma palavra específica": {
    "prefix": "sedlinhaantesdapalavra",
    "body": "#Insere uma linha antes da linha que possui uma palavra específica, no caso insere uma linha com o conteúdo \"Nova linha\", antes das linhas que possuem a palavra Podemos\nsed '/Podemos/{h;s/.*/Nova Linha/;p;x;}'",
    "description": "Insere uma linha antes da linha que possui uma palavra específica"
  },
  "Inclui linha depois de uma determinada linha": {
    "prefix": "sedlinhadepoisdalinha",
    "body": "#Inclui linha após uma determinada linha\nsed -e '3a' -e 'Nova linha inserida após a linha 3'",
    "description": "Inclui linha depois de uma determinada linha"
  },
  "Insere uma linha após a linha que possui uma palavra específica": {
    "prefix": "sedlinhadepoisdapalavra",
    "body": "#Insere uma linha após a linha que possui uma palavra específica, no caso insere uma linha com o conteúdo \"Nova linha\", após as linhas que possuem a palavra Podemos\nsed '/Podemos/{p;s/.*/Nova linha/;}'",
    "description": "Insere uma linha após a linha que possui uma palavra específica"
  },
  "Inclui linha antes de uma determinada linha": {
    "prefix": "sedlinhaantesdalinha",
    "body": "#Inclui linha antes de uma determinada linha\nsed -e '3i' -e 'Nova linha inserida antes da linha 3'",
    "description": "Inclui linha antes de uma determinada linha"
  },
  "Inclui texto no inicio de uma linha especifica": {
    "prefix": "sedinserepalavranoinicio",
    "body": "#Incluir texto no início de uma linha específica\nsed '2s/^/Incluído no inicio da linha 2 /'",
    "description": "Inclui texto no inicio de uma linha especifica"
  },
  "Inclui texto no final de uma linha especifica": {
    "prefix": "sedinserepalavranofim",
    "body": "#Incluir texto no final de uma linha específica\nsed '2s/$/Incluído no final da linha 2 /'",
    "description": "Inclui texto no final de uma linha especifica"
  },
  "Exibe da linha 2 a 8": {
    "prefix": "sedexibelinhas",
    "body": "#Exibe um intervalo de linhas, no exemplo linha 2 à 8. Para exibir a última linha troque o número pelo caractere $\nsed '2,8!d'",
    "description": "Exibe da linha 2 a 8"
  },
  "Exibe apenas a linha 3": {
    "prefix": "sedexibelinha",
    "body": "#Exibe apenas uma linha, no exemplo a linha 3. Para exibir a última linha troque o número pelo caractere $\nsed '3!d'",
    "description": "Exibe apenas a linha 3"
  },
  "Remove todas as quebras de linha": {
    "prefix": "sedapagaquebrasdelinha",
    "body": "#Remove todas as quebras de linha e deixa todo o texto com apenas uma linha\nsed ':a;$!N;s/\n//;ta;'",
    "description": "Remove todas as quebras de linha"
  },
  "Apagar os primeiros caracteres de todas as linhas": {
    "prefix": "sedapagaprimeirocaractere",
    "body": "#Apaga o primeiro caractere de todas as linhas, insira mais pontos para apagar mais caracteres\nsed 's/.//'",
    "description": "Apagar os primeiros caracteres de todas as linhas"
  },
  "Apagar todas as linhas entre entre duas ocorrências": {
    "prefix": "sedapagalinhasentreocorrencias",
    "body": "#Apagar todas as linhas entre entre duas ocorrências, no exemplo apaga todas as linhas que estiverem entre a primeira linha com a palavra linux até a linha com a palavra livre\nsed '/linux/,/livre/d'",
    "description": "Apagar todas as linhas entre entre duas ocorrências"
  },
  "Apaga linhas em branco": {
    "prefix": "sedapagalinhasembranco",
    "body": "#Apaga linhas em branco\nsed '/^$/d'",
    "description": "Apaga linhas em branco"
  },
  "Apaga linhas que contem determinados caracteres": {
    "prefix": "sedapagalinhapeloscaracteres",
    "body": "#Apaga linhas que contem determinados caracteres, no exemplo as linhas que contenham a palavra carro\nsed '/carro/d'",
    "description": "Apaga linhas que contem determinados caracteres"
  },
  "Remove uma linha pelo númeor": {
    "prefix": "sedapagalinhapelonumero",
    "body": "#Remove uma linha, no exemplo a linha 2. O caractere $ representa a última linha.\nsed '2d'",
    "description": "Remove uma linha pelo númeor"
  },
  "Apaga intervalo de linhas": {
    "prefix": "sedapagaintervalo",
    "body": "#Apagar intervalo de linhas, no exemplo a linha 2 a 8. O caractere $ representa a última linha.\nsed '2,8d'",
    "description": "Apaga intervalo de linhas"
  },
  "Apaga espaços em branco consecutivos": {
    "prefix": "sedapagaespacoduplo",
    "body": "#Apaga espaços em branco consecutivos, ou seja, remove espaços duplicados\nsed 's/[ ]+/ /g'",
    "description": "Apaga espaços em branco consecutivos"
  },
  "Apaga a coluna especificada": {
    "prefix": "sedapagacoluna",
    "body": "#Apaga a coluna especificada, no exemplo a coluna número 3\nsed 's/.//3'",
    "description": "Apaga a coluna especificada"
  },
  "Apaga apenas a primeira linha que contem determinados caracteres": {
    "prefix": "sedprimeiralinhaquecasar",
    "body": "#Apaga apenas a primeira linha que contem determinados caracteres, no exemplo a linha que contiver a palavra carro\nsed '/carro/{H;x;/^\n/d;g;}'",
    "description": "Apaga apenas a primeira linha que contem determinados caracteres"
  },
  "Tornar todas as letras do texto minusculas": {
    "prefix": "sedmaiusculas",
    "body": "#Tornar todas as letras do texto minúsculas\nsed 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZÀÁÂÃÉÊÍÓÔÕÚÇ/abcdefghijklmnopqrstuvwxyzàáâãéêíóôõúç/'",
    "description": "Tornar todas as letras do texto minusculas"
  },
  "Tornar todas as letras do texto maiúsculas": {
    "prefix": "sedmaiusculas",
    "body": "#Tornar todas as letras do texto maiúsculas\nsed 'y/abcdefghijklmnopqrstuvwxyzàáâãéêíóôõúç/ABCDEFGHIJKLMNOPQRSTUVWXYZÀÁÂÃÉÊÍÓÔÕÚÇ/'",
    "description": "Tornar todas as letras do texto maiúsculas"
  },
  "Altera parâmetro de arquivos de configuração": {
    "prefix": "sedtrocaparametro",
    "body": "#Altera parâmetro de arquivos de configuração.\n#Esse comando facilita a troca de configuração de arquivos que seguem o padrão parecido com esse: VARIAVEL=valor\n#No exemplo troca qualquer valor atribuído à variável name pelo valor Debian.\nsed 's|^ *\bNAME\b *=.*|NAME=Debian|'",
    "description": "Altera parâmetro de arquivos de configuração"
  },
  "Troca todo o texto de uma linha específica": {
    "prefix": "sedtrocaotextodeumalinhaespecifica",
    "body": "#Substitui todo o texto de uma linha específica\nsed '3s/.*/Novo texto da linha 3/'",
    "description": "Troca todo o texto de uma linha específica"
  },
  "Trocar todas as ocorrências do texto": {
    "prefix": "sedtrocapalavra",
    "body": "#Trocar todas as ocorrências do texto, no exemplo troca a palavra azul por verde em todo o texto\nsed 's/azul/verde/g'",
    "description": "Trocar todas as ocorrências do texto"
  },
  "Substitui uma palavra por outra, desde que uma terceira palavra esteja presente na linha": {
    "prefix": "sedtrocadesdequeterceirapalavraestejapresente",
    "body": "#Substitui uma palavra por outra, desde que uma terceira palavra esteja presente na linha, no exemplo a palavra Script substituirá a palavra Linux nas linhas que também possuírem a palavra livro\nsed '/livro/s/Linux/Script/g'",
    "description": "Substitui uma palavra por outra, desde que uma terceira palavra esteja presente na linha"
  },
  "Trocar caracteres apenas de uma ocorrência específica em cada linha": {
    "prefix": "sedtrocaocorrenciaespecificaemcadalinha",
    "body": "#Trocar caracteres apenas de uma ocorrência específica em cada linha, no exemplo será trocada a terceira ocorrência da palavra azul, pela palavra verde\nsed 's/azul/verde/3'",
    "description": "Trocar caracteres apenas de uma ocorrência específica em cada linha"
  },
  "Substitui palavras apenas em linhas específicas": {
    "prefix": "sedtrocapalavrasemlinhasespecificas",
    "body": "#Substitui palavras apenas em linhas específicas, no exemplo substitui usar por fazer nas linhas entre 2 e 6\nsed '2,6s/usar/fazer/'",
    "description": "Substitui palavras apenas em linhas específicas"
  },
  "Troca o intervalo entre os caracteres": {
    "prefix": "sedtrocaintervalo",
    "body": "#Troca o intervalo entre os caracteres, no exemplo troca todo o conteúdo entre sed e legal, incluindo as palavras sed e legal, por: novo texto trocado utilizando o sed\nsed 's/sed.*legal/novo texto trocado utilizando o sed/g'",
    "description": "Troca o intervalo entre os caracteres"
  },
  "Exibe as linhas que não coincidem": {
    "prefix": "grep -v ",
    "body": "#Exibe as linhas que não coincidem\ngrep -v",
    "description": "Exibe as linhas que não coincidem"
  },
  "Exibe linhas antes de cada resultado encontrado": {
    "prefix": "grep -B 2 ",
    "body": "#Exibe duas linhas antes de cada resultado encontrado\ngrep -B 2",
    "description": "Exibe linhas antes de cada resultado encontrado"
  },
  "Exibe linhas após cada resultado encontrado": {
    "prefix": "grep -A 2 ",
    "body": "#Exibe duas linhas após cada resultado encontrado\ngrep -A 2",
    "description": "Exibe linhas após cada resultado encontrado"
  },
  "Ignora a diferença entre letras maiúsculas e minúsculas": {
    "prefix": "grep -i ",
    "body": "#Ignora a diferença entre letras maiúsculas e minúsculas\ngrep -i",
    "description": "Ignora a diferença entre letras maiúsculas e minúsculas"
  },
  "Exibe apenas o número de linhas que seriam exibidas": {
    "prefix": "grep -c ",
    "body": "#Exibir apenas o número de linhas que seriam exibidas\ngrep -c",
    "description": "Exibe apenas o número de linhas que seriam exibidas"
  },
  "Exibe o número de cada linha antes do resultado": {
    "prefix": "grep -n ",
    "body": "#Exibe o número de cada linha antes do resultado\ngrep -n",
    "description": "Exibe o número de cada linha antes do resultado"
  }
}
